{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": "Specifies a the load balancer name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all of the resources created by this template. Availability zones are only supported in certain regions.  For the last supported zones, see https://docs.microsoft.com/en-us/azure/availability-zones/az-overview#services-support-by-region."
            }
        },
        "loadBalancerSkuName": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Azure load balancer sku"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet Id"
            }
        },
        "privateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Specify static IP address"
            }
        }
    },
    "variables": {
        "lbFrontEndName": "LoadBalancerFrontEnd",
        "lbBackendPoolName": "LoadBalancerBackEndPool",
        "lbProbeName": "loadBalancerHealthProbe"
    },
    "resources": [
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-12-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('loadBalancerSkuName')]"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            },
                            "privateIPAddress": "[parameters('privateIPAddress')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBackendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "HTTPLBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), variables('lbFrontEndName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('lbBackendPoolName'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), variables('lbProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('lbProbeName')]",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        }
    ]
}